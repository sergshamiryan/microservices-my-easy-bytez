server:
  port: 8072
  error:
    include-message: always

spring:
  application:
    name: "gatewayserver"
  config:
    import:
      - "application-qa.yml"
      - "application-prod.yml"
  profiles:
    active: "default"
  #Instructing gateway server to connect with discovery server -  eureka server and locate all the
  #details about microservices, and then by using the same forward the traffic to individual micros*
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:7080/realms/master/protocol/openid-connect/certs"

management:
  endpoint:
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

endpoints:
  shutdown:
    enabled: true

#Gateway server will know from discovery
#service actual endpoints of microservices
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "gatewayservice"
    description: "Sergshamiryan bank gateway server application"
    version: "1.0.0"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 #How many requests to monitor before changing state from close to open
      permittedNumberOfCallsInHalfOpenState: 2 #How many calls to do for checking if the service got up
      failureRateThreshold: 50 #If at least 50% of requests fail, go to open state
      waitDurationInOpenState: 10000 #Wait ten seconds then move to half open state(partial traffic)